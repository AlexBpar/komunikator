Перем XMLHttp;
Процедура СохранитьНажатие(Элемент)

	
	 Текст = Новый ТекстовыйДокумент();
	Текст.ДобавитьСтроку(ВнутреннийНомер);
	 Текст.ДобавитьСтроку(Пароль);	
	Текст.ДобавитьСтроку(Сервер) ;
	Текст.Записать("PersonalDetails.txt");

	 Пользователь = ПараметрыСеанса.ТекущийПользователь.ПолучитьОбъект();
					Пользователь.Записать();
	
	Авторизация();
	   

	
КонецПроцедуры   



                

Процедура ПозвонитьНажатие()
	
	 Ссылка ="http://"  + СокрЛП(Сервер)+"//service/data.php?action=make_call&session="+СокрЛП(Сессия)+"&number="+СокрЛП(НомерТелефона);
	 Сообщить(Ссылка);
	 XMLHttp.Open("GET", Ссылка, False);
	 XMLHttp.Send();
	 ОтветСервера = XMLHttp.responseText;
	 Сообщить(ОтветСервера);
	 Если Найти(ОтветСервера,"true") > 0 Тогда
		 Сообщить("Подключились");
		// НомерТелефона = СокрЛП(Сред(ОтветСервера,Найти(ОтветСервера,"number")+6));
		 ПоискАбонента(НомерТелефона);
	 ИначеЕсли  Найти(ОтветСервера,"false") > 0 Тогда
		 Сообщить(Сред(ОтветСервера,28,СтрДлина(ОтветСервера)-30));
	 КонецЕсли;
	 
		 
 КонецПроцедуры





Процедура НайтиНажатие(Элемент)   //Поиск по введенной строке
	РезультатПоискаСписок.Очистить();
	
	ЗапросПоиска = Новый Запрос;
	ЗапросПоиска.Текст = "ВЫБРАТЬ
	                     |	КонтактнаяИнформация.Объект
	                     |ИЗ
	                     |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                     |ГДЕ
	                     |КонтактнаяИнформация.Представление ПОДОБНО &Наименование";
	//ЗапросПоиска.УстановитьПараметр("Наименование",СокрЛП(СтрокаПоиска));
	ЗапросПоиска.УстановитьПараметр("Наименование","%"+СокрЛП(СтрокаПоиска)+"%");
	РезультатЗапроса = ЗапросПоиска.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() <> 0 Тогда
		Для каждого Строка Из РезультатЗапроса Цикл
			Нов = РезультатПоискаСписок.Добавить();
			Нов.Абонент = Строка.Объект;
		КонецЦикла;
	Иначе Сообщить("По номеру "+СтрокаПоиска+" ничего не найдено!");
		СписокНомеровКонтактногоЛица.Очистить();
		РезультатПоискаСписок.Очистить();
		СтрокаПоиска = "";
		НомерТелефона = "";
		ИнформацияОКонтактномЛице = "";
	КонецЕсли;
		


		
КонецПроцедуры




Процедура ПриОткрытии()
	//ищем текстовик с персональными данными
	Попытка
        Текст = Новый ЧтениеТекста("PersonalDetails.txt",КодировкаТекста.Системная);
	Исключение 
		ПользовательС = ПараметрыСеанса.ТекущийПользователь;

      ЭтаФорма.Панель.ТекущаяСтраница = ЭтаФорма.Панель.Страницы.Настройки;
     Режим = РежимДиалогаВопрос.ОК;
    	  Ответ = Вопрос("Необходимо заполнить настройки подключения!",Режим,,,"Ошибка соединения");  
		  Если Ответ = КодВозвратаДиалога.ОК Тогда
			  ВнутреннийНомер = "";
			  Пароль = "";
			  Сервер = "";
    		  Возврат;
   		  КонецЕсли;

        Возврат;
    КонецПопытки;	
	  
	Если ТаймаутСекунд = 0 Тогда
		ТаймаутСекунд = 5;
	КонецЕсли;
	Тайм = 0;
	ПользовательС = ПараметрыСеанса.ТекущийПользователь;
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
//логин, пароль, сервер берем из текстовика	
	Текст = Новый ТекстовыйДокумент();
	Текст.Прочитать( "PersonalDetails.txt");
	Стр = Текст.ПолучитьСтроку(1);
	ВнутреннийНомер = Стр;
	  Стр2 = Текст.ПолучитьСтроку(2);
	  Пароль = Стр2;
	  Стр3 = Текст.ПолучитьСтроку(3);
	  Сервер = Стр3;	

		  
	  Если СокрЛП(Сервер) <> "" И СокрЛП(Пароль) <> "" И СокрЛП(ВнутреннийНомер)<> "" Тогда
		ОбновитьДанныеОКонтактномЛице(Справочники.Контрагенты.ПустаяСсылка());
		Авторизация();
		ПодключитьОбработчикОжидания("СостояниеПриема", ТаймаутСекунд); 
		
	Иначе 
		ЭтаФорма.Панель.ТекущаяСтраница = ЭтаФорма.Панель.Страницы.Настройки;
		Сообщить("Заполните настройки подключения.");
		
	КонецЕсли;
		 
	 
КонецПроцедуры





Функция НайтиЧислоВСтроке(СтрокаСНомеромТелефона)
	СтрокаЧисел = "";
	Для Индекс = 1 По СтрДлина(СтрокаСНомеромТелефона) Цикл
		Символ = Сред(СтрокаСНомеромТелефона, Индекс, 1); //Перебираем все символы в строке с телефоном
		Если КодСимвола(Символ) >= 48 И КодСимвола(Символ) <= 57 Тогда // код "0"=48, "9"=57
			СтрокаЧисел = СтрокаЧисел + Символ;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокаЧисел;
КонецФункции





Процедура Авторизация()
    Ссылка = "http://"  + СокрЛП(Сервер)+"//service/data.php?action=auth&extension="+СокрЛП(ВнутреннийНомер)+"&password="+СокрЛП(Пароль);
    Сообщить(Ссылка);
	XMLHttp = GetCOMObject("", "Microsoft.XMLHTTP");
	XMLHttp.Open("GET", Ссылка, False);
	XMLHttp.Send();
	ОтветСервера = XMLHttp.responseText;
		
	РезультатМассив = СтрокаВМассив(ОтветСервера,);
	МояСтруктура = Новый Структура("Доступ","Сессия");
    Для каждого ЭлементМассива Из РезультатМассив Цикл
      Элемент = СтрЗаменить(ЭлементМассива, """","");
	  Элемент = СтрЗаменить(Элемент, "{","");
	 	  Если Найти(Элемент,"true") > 0 Тогда
	      МояСтруктура.Вставить("Доступ", "true");
      ИначеЕсли Найти(Элемент,"false") > 0 Тогда
		  МояСтруктура.Вставить("Доступ", "false");
		  Режим = РежимДиалогаВопрос.ОК;
		  Ответ = Вопрос("Проверьте наличие и правильность номера и пароля!!!",Режим,,,"Ошибка соединения");  
		  Если Ответ = КодВозвратаДиалога.ОК Тогда
			  Возврат;
		  КонецЕсли;
		  
			  
      ИначеЕсли Найти(Элемент,"session_id") > 0 Тогда
		  Значение = Лев(СтрЗаменить(Элемент, "session_id:",""),СтрДлина(СтрЗаменить(Элемент, "session_id:","")));
		  МояСтруктура.Вставить("Сессия",Значение);
		  Сессия = Значение;
		  //Сообщить(Сессия);
		  //СостояниеПриема();
		 
	  КонецЕсли;
      
    КонецЦикла;
	
КонецПроцедуры





Функция СтрокаВМассив(Знач Значение, Разделитель = ",") Экспорт
        МнСтр = СтрЗаменить( Значение, Разделитель, Символы.ПС);
        РезультатМассив = Новый Массив;
		Для й = 1 По СтрЧислоСтрок(МнСтр) Цикл
            РезультатМассив.Добавить(СтрПолучитьСтроку(МнСтр,й));
        КонецЦикла;
        Возврат РезультатМассив;
	КонецФункции





Процедура СостояниеПриема()
	Ссылка = "http://" + СокрЛП(Сервер)+"//service/data.php?action=get_state&session="+СокрЛП(Сессия);
	
	 XMLHttp.Open("GET", Ссылка, False);
	 XMLHttp.Send();
	 ОтветСервера = XMLHttp.responseText;
	 //
 	//ОтветСервера = "success:true,status:online,incoming_call:{time:01.01.12 12:00:00,number:000}"; 
 	//
 	Если Найти(ОтветСервера,"incoming_call") > 0 Тогда
    	 РезультатМассив = СтрокаВМассив(ОтветСервера,);
    	 Для каждого ЭлементМассива Из РезультатМассив Цикл
    		
    			 //Элемент = СтрЗаменить(Элемент, "{","");
    			 Если Найти(ЭлементМассива,"time") > 0 Тогда
    			    Время = Прав(СокрЛП(ЭлементМассива),17); 
			     ИначеЕсли Найти(ЭлементМассива,"number") > 0 Тогда
				    Сообщить(ЭлементМассива);
				    Элемент = СтрЗаменить(ЭлементМассива, "}","");
				    Элемент = СтрЗаменить(Элемент, "}","");
                    Элемент = СтрЗаменить(Элемент, """","");
				    Сообщить(Элемент);
				    НомерТелефона = Прав(СокрЛП(Элемент),СтрДлина(Элемент)-Найти(Элемент,":"));
					
			 КонецЕсли;

         КонецЦикла;
 
		Сообщить("Поступил звонок в "+Время +", от абонента "+НомерТелефона);
		
	 	ПоискАбонента(НомерТелефона);
		
		//открываем инф окно
		ОтключитьОбработчикОжидания("СостояниеПриема");
		ФормаИнформации = ЭтотОбъект.ПолучитьФорму("ИнформацияКонтактногоЛица");
        ФормаИнформации.Открыть();
		ПодключитьОбработчикОжидания("СостояниеПриема", ТаймаутСекунд);	
		Сообщить("вкл");
	 КонецЕсли;
		 
 КонецПроцедуры

 

Процедура ПоискАбонента(НомерТелефона)


		
     	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КонтактнаяИнформация.Объект,
	               |	КонтактнаяИнформация.Тип,
	               |	КонтактнаяИнформация.Вид
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация";
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			НайденыйНомер = НайтиЧислоВСтроке(СокрЛП(Выборка.Представление));
			//Если НайденыйНомер = НомерТелефона Тогда
			Если Найти(НайденыйНомер,НомерТелефона) Тогда
				ИнформацияОКонтактномЛице = Выборка.Объект;
				Если ИнформацияОКонтактномЛице = Справочники.Контрагенты.ПустаяСсылка() Тогда
					КонтактноеЛицо = Выборка.Объект; 
					ИнформацияОКонтактномЛице = Выборка.Объект.Владелец;
						КонецЕсли;
				
				ОбновитьДанныеОКонтактномЛице(ИнформацияОКонтактномЛице);
				Прервать;
			Иначе  
				ИнформацияОКонтактномЛице = Справочники.Контрагенты.ПустаяСсылка();
				   Сообщить("Контактное лицо не найдено");
		 СписокНомеровКонтактногоЛица.Очистить();


										КонецЕсли;

	    КонецЦикла;
	
	Иначе 
		Сообщить("Контактное лицо не найдено");
		СписокНомеровКонтактногоЛица.Очистить();
		
	КонецЕсли;
	
	Если ИнформацияОКонтактномЛице = Справочники.Контрагенты.ПустаяСсылка() Тогда
		Сообщить("Контактное лицо не найдено");
		 СписокНомеровКонтактногоЛица.Очистить();

	КонецЕсли;	


КонецПроцедуры







Процедура ОбновитьДанныеОКонтактномЛице(ИнформацияОКонтакте)
	//Если НЕ ИнформацияОКонтакте = Справочники.Контрагенты.ПустаяСсылка() Тогда
	Попытка
		//ИнформацияОКонтакте = Справочники.Контрагенты.ПолучитьСсылку();		  
			ИнформацияОКонтакте.ПолучитьОбъект();
		ОтборДанныхОКонтактномЛице = СписокНомеровКонтактногоЛица.Отбор.Объект;
		ОтборДанныхОКонтактномЛице.Значение = ИнформацияОКонтакте;
		ОтборДанныхОКонтактномЛице.Использование = Истина;	
		
		ОтборДанныхОКонтактномЛице = СписокНомеровКонтактногоЛица.Отбор.Тип;
		ОтборДанныхОКонтактномЛице.Значение = Перечисления.ТипыКонтактнойИнформации.Телефон;
		ОтборДанныхОКонтактномЛице.Использование = Истина;
	Исключение
		ИнформацияОКонтакте = Справочники.Контрагенты.ПустаяСсылка()
	КонецПопытки;	
	//КонецЕсли;
	         ИнформацияОКонтакте = Справочники.Контрагенты.ПолучитьСсылку().ПолучитьОбъект();
            
        ОтборДанныхОКонтактномЛице = СписокНомеровКонтактногоЛица.Отбор.Объект;
		ОтборДанныхОКонтактномЛице.Значение = ИнформацияОКонтакте;
		ОтборДанныхОКонтактномЛице.Использование = Истина;	
		
		ОтборДанныхОКонтактномЛице = СписокНомеровКонтактногоЛица.Отбор.Тип;
		ОтборДанныхОКонтактномЛице.Значение = Перечисления.ТипыКонтактнойИнформации.Телефон;
		ОтборДанныхОКонтактномЛице.Использование = Истина;


КонецПроцедуры

//Процедура НомерТелефонаПриИзменении(Элемент)
//	ПоискАбонента(СокрЛП(НомерТелефона));
//	КонецПроцедуры

Процедура СтрокаПоискаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	//ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления();
КонецПроцедуры

Процедура РезультатПоискаСписокПриАктивизацииСтроки(Элемент)

		ТекущаяСтрока = ЭлементыФормы.РезультатПоискаСписок.Колонки.Абонент;  
	ИнформацияОКонтактномЛице = ТекущаяСтрока;
	ИнформацияОКонтакте = ТекущаяСтрока;

	ОбновитьДанныеОКонтактномЛице(ИнформацияОКонтакте);
	//
	//	Возврат;

	//ТекущаяСтрока = ЭлементыФормы.РезультатПоискаСписок.Колонки;
	//ИнформацияОКонтактномЛице = ТекущаяСтрока.Абонент;
	//ИнформацияОКонтакте = ТекущаяСтрока.Абонент;
	//ОбновитьДанныеОКонтактномЛице(ИнформацияОКонтакте);
КонецПроцедуры

Процедура СписокНомеровКонтактногоЛицаПриАктивизацииСтроки(Элемент)
	НомерТелефона = ЭлементыФормы.СписокНомеровКонтактногоЛица.ТекущиеДанные	;	
	    
	КонецПроцедуры



Процедура СоздатьСобытиеНажатие(Элемент)
	// Вставить содержимое обработчика.
	
	ВвестиНовоеСобытие(Ложь, Неопределено, Перечисления.ВидыСобытий.ТелефонныйЗвонок);

КонецПроцедуры
	




Процедура ВвестиНовоеСобытие(Копирование = Ложь, Элемент = Неопределено, ВыбранныйВидСобытия)

	//Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ИнформацияОКонтактномЛице.ПолучитьФорму()) Тогда
	//	Возврат;
	//КонецЕсли; 

	Если Копирование Тогда
		Если Элемент.ТекущаяСтрока <> Неопределено И НЕ Элемент.ТекущаяСтрока.Пустая() Тогда
			Элемент.ТекущаяСтрока.Скопировать().ПолучитьФорму(,ЭтаФорма).Открыть();
		КонецЕсли;
	Иначе
		
		Если ВыбранныйВидСобытия = Неопределено Тогда
			
			СписокВыбора = Новый СписокЗначений;
			Для каждого ВидСобытия Из Перечисления.ВидыСобытий Цикл
				ЭлементСписка = СписокВыбора.Добавить(ВидСобытия, Строка(ВидСобытия));
				ЭлементСписка.Картинка = УправлениеКонтактами.ПолучитьКартинкуНапоминания(ВидСобытия);
			КонецЦикла; 

			Если Элемент <> Неопределено И Элемент.ТекущиеДанные <> Неопределено И НЕ Элемент.ТекущиеДанные.Ссылка.Пустая() Тогда
				ЗначенияПоискаВСписке = Элемент.ТекущиеДанные.ВидСобытия;
			КонецЕсли;

			НайденныйЭлементСписка = СписокВыбора.НайтиПоЗначению(ЗначенияПоискаВСписке);
			ВыбранныйЭлемент = СписокВыбора.ВыбратьЭлемент("Выберите тип документа", НайденныйЭлементСписка);
			
			Если ВыбранныйЭлемент <> Неопределено Тогда
				ВыбранныйВидСобытия = ВыбранныйЭлемент.Значение;
			КонецЕсли; 
			
		КонецЕсли; 
		
		Если ВыбранныйВидСобытия <> Неопределено Тогда
			
			Док = Документы.Событие.СоздатьДокумент();
			
			Док.ВидСобытия     = ВыбранныйВидСобытия;
			Док.Контрагент     = ИнформацияОКонтактномЛице;
			//Док.КонтактноеЛицо = ИнформацияОКонтактномЛице.ОсновноеКонтактноеЛицо;
			Док.КонтактноеЛицо = КонтактноеЛицо;
			Док.ВидОбъекта     = Перечисления.ВидыОбъектовСобытия.Контрагент;

			ФормаСобытия       = Док.
			ПолучитьФорму(,ЭтаФорма);
			
//			ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.События;
			ФормаСобытия.СтруктураОбъектКонтрагент = Новый Структура("Объект, ЗаписыватьОбъект", ЭтотОбъект, Истина);
			
			ФормаСобытия.Открыть();
			Сообщить("Нужно ли здесь открывать окно контрагента? (справочник Контрагенты)");
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры



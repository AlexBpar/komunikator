Перем XMLHttp;


Процедура СохранитьНажатие(Элемент)
 	
	 Текст = Новый ТекстовыйДокумент();
	Текст.ДобавитьСтроку(ВнутреннийНомер);
	 Текст.ДобавитьСтроку(Пароль);	
	Текст.ДобавитьСтроку(Сервер) ;
	Текст.Записать(ПользовательС+".txt");
	
	 Пользователь = ПараметрыСеанса.ТекущийПользователь.ПолучитьОбъект();
					Пользователь.Записать();
	
	Авторизация();
	   

	
КонецПроцедуры                   

Процедура ПозвонитьНажатие()
	
	 Ссылка ="http://"  + СокрЛП(Сервер)+"//service/data.php?action=make_call&session="+СокрЛП(Сессия)+"&number="+СокрЛП(НомерТелефона);
	 Сообщить(Ссылка);
	 XMLHttp.Open("GET", Ссылка, False);
	 XMLHttp.Send();
	 ОтветСервера = XMLHttp.responseText;
	 Сообщить(ОтветСервера);
	 Если Найти(ОтветСервера,"true") > 0 Тогда
		 Сообщить("Подключились");
		 //НомерТелефона = СокрЛП(Сред(ОтветСервера,Найти(ОтветСервера,"number")+6));
		 ПоискАбонента(СокрЛП(НомерТелефона));
	 ИначеЕсли  Найти(ОтветСервера,"false") > 0 Тогда
		 Сообщить(Сред(ОтветСервера,28,СтрДлина(ОтветСервера)-30));
	 КонецЕсли;
	 
		 
 КонецПроцедуры

Процедура НайтиНажатие(Элемент)   //Поиск по введенной строке
	Если Не СтрокаПоиска ="" тогда
	 
	РезультатПоискаСписок.Очистить();
	СписокНомеровКонтактногоЛица.Очистить();
	НомерТелефона = "";
		
	ЗапросПоиска = Новый Запрос;
	ЗапросПоиска.Текст = "ВЫБРАТЬ
	                     |	КонтактнаяИнформация.Объект
	                     |ИЗ
	                     |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                     |ГДЕ
	                     |КонтактнаяИнформация.Представление ПОДОБНО &Наименование";
	//ЗапросПоиска.УстановитьПараметр("Наименование",СокрЛП(СтрокаПоиска));
	ЗапросПоиска.УстановитьПараметр("Наименование","%"+СокрЛП(СтрокаПоиска)+"%");
	РезультатЗапроса = ЗапросПоиска.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() <> 0 Тогда
		Для каждого Строка Из РезультатЗапроса Цикл
			Нов = РезультатПоискаСписок.Добавить();
			Нов.Объект= Строка.Объект;
		
		КонецЦикла;
		
		 	Иначе Сообщить("По номеру "+СтрокаПоиска+" ничего не найдено!");
		СписокНомеровКонтактногоЛица.Очистить();
		РезультатПоискаСписок.Очистить();
		СтрокаПоиска = "";
		НомерТелефона = "";
		ИнформацияОКонтактномЛице = "";
	КонецЕсли;
		
 КонецЕсли;

		
КонецПроцедуры

Процедура ПриОткрытии()
	//ищем текстовик с персональными данными
	ПользовательС = ПараметрыСеанса.ТекущийПользователь;

	Попытка
        Текст = Новый ЧтениеТекста(ПользовательС+".txt");
	Исключение; 
		

	         ЭтаФорма.Панель.ТекущаяСтраница = ЭтаФорма.Панель.Страницы.Настройки;
     Режим = РежимДиалогаВопрос.ОК;
    	  Ответ = Вопрос("Необходимо заполнить настройки подключения!",Режим,,,"Ошибка соединения");  
		  Если Ответ = КодВозвратаДиалога.ОК Тогда
			  ВнутреннийНомер = "";
			  Пароль = "";
			  Сервер = "";

          		  Возврат;
				
   		  КонецЕсли;

        Возврат;
    КонецПопытки;	
	  
	Если ТаймаутСекунд = 0 Тогда
		ТаймаутСекунд = 5;
	КонецЕсли;
	Тайм = 0;
	ПользовательС = ПараметрыСеанса.ТекущийПользователь;
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
//Если для фона формы уже выбрана картинка, используется последняя выбранная картинка	
Попытка
Картинка = Новый Картинка("Фон.jpg");
 Панель.Картинка = Картинка;
 	
Исключение;
 Возврат;
КонецПопытки;
    
      //логин, пароль, сервер берем из текстовика
	Текст = Новый ТекстовыйДокумент();
	Текст.Прочитать(ПользовательС+".txt");
	Стр = Текст.ПолучитьСтроку(1);
	ВнутреннийНомер = Стр;
	  Стр2 = Текст.ПолучитьСтроку(2);
	  Пароль = Стр2;
	  Стр3 = Текст.ПолучитьСтроку(3);
	  Сервер = Стр3;	

		  
	  Если СокрЛП(Сервер) <> "" И СокрЛП(Пароль) <> "" И СокрЛП(ВнутреннийНомер)<> "" Тогда
		ОбновитьДанныеОКонтактномЛице(Справочники.Контрагенты.ПустаяСсылка());
		Авторизация();
		ПодключитьОбработчикОжидания("СостояниеПриема", ТаймаутСекунд); 
		
	Иначе 
		ЭтаФорма.Панель.ТекущаяСтраница = ЭтаФорма.Панель.Страницы.Настройки;
		Сообщить("Заполните настройки подключения.");
		
	КонецЕсли;
	Попытка
	 //Восстанавливаем значение настроек текста телефонии
	 ЭлементыФормы.ВнутреннийНомер.ЦветТекстаПоля= ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.ИнформацияОКонтактномЛице.ЦветТекстаПоля= ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.ЦветТекста.ЦветТекстаКнопки =     ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.НадписьВнутреннийНомер.ЦветТекста=  ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.НадписьИнформацияОКонтактномЛице.ЦветТекста=  ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.НадписьНомерТелефона.ЦветТекста= ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.НадписьПароль.ЦветТекста =  ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.НадписьСервер.ЦветТекста=ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.НадписьТаймаут.ЦветТекста=  ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.Найти.ЦветТекстаКнопки= ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.НомерТелефона.ЦветТекстаПоля=ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.Пароль.ЦветТекстаПоля =ВосстановитьЗначение("ВыбранныйЦвет"); 
	ЭлементыФормы.Позвонить.ЦветТекстаКнопки=  ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.ПолеКалендаря1.ЦветТекстаПоля=   ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.ПользовательС.ЦветТекстаПоля=ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.РезультатПоискаСписок.ЦветТекстаПоля= ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.сек.ЦветТекста=  ВосстановитьЗначение("ВыбранныйЦвет");
	ЭлементыФормы.Сервер.ЦветТекстаПоля =ВосстановитьЗначение("ВыбранныйЦвет"); 
	ЭлементыФормы.СоздатьСобытие.ЦветТекстаКнопки=  ВосстановитьЗначение("ВыбранныйЦвет");
	 ЭлементыФормы.Сохранить.ЦветТекстаКнопки=  ВосстановитьЗначение("ВыбранныйЦвет");
	 ЭлементыФормы.СписокНомеровКонтактногоЛица.ЦветТекстаПоля= ВосстановитьЗначение("ВыбранныйЦвет");
	 ЭлементыФормы.СтрокаПоиска.ЦветТекстаПоля=ВосстановитьЗначение("ВыбранныйЦвет");
	 ЭлементыФормы.ТаймаутСекунд.ЦветТекстаПоля= ВосстановитьЗначение("ВыбранныйЦвет");
	 ЭлементыФормы.ФонПанели.ЦветТекстаКнопки =ВосстановитьЗначение("ВыбранныйЦвет");
	 ЭлементыФормы.ЦветРамки.ЦветТекстаКнопки = ВосстановитьЗначение("ВыбранныйЦвет");
	 ЭлементыФормы.Шрифт.ЦветТекстаКнопки = ВосстановитьЗначение("ВыбранныйЦвет"); 
	 ЭлементыФормы.ДействияФормы.ЦветТекстаКнопки =  ВосстановитьЗначение("ВыбранныйЦвет");
	  Панель.ЦветТекста =ВосстановитьЗначение("ВыбранныйЦвет");
	  Панель.ЦветТекстаПоля = ВосстановитьЗначение("ВыбранныйЦвет");
	  ЭлементыФормы.КонтактноеЛицо.ЦветТекстаКнопки = ВосстановитьЗначение("ВыбранныйЦвет");
   ЭлементыФормы.Контрагент.ЦветТекстаКнопки = ВосстановитьЗначение("ВыбранныйЦвет");
	  
	  
	  
	  //восстановить значение цвета рамок
ЭлементыФормы.ВнутреннийНомер.ЦветРамки= ВосстановитьЗначение("ЦветРамки");
	ЭлементыФормы.ИнформацияОКонтактномЛице.ЦветРамки= ВосстановитьЗначение("ЦветРамки");
	ЭлементыФормы.НомерТелефона.ЦветРамки=  ВосстановитьЗначение("ЦветРамки");
	ЭлементыФормы.Пароль.ЦветРамки = ВосстановитьЗначение("ЦветРамки"); 
		ЭлементыФормы.РезультатПоискаСписок.ЦветРамки=  ВосстановитьЗначение("ЦветРамки");
	ЭлементыФормы.Сервер.ЦветРамки = ВосстановитьЗначение("ЦветРамки");
		 ЭлементыФормы.СписокНомеровКонтактногоЛица.ЦветРамки=  ВосстановитьЗначение("ЦветРамки");
	 ЭлементыФормы.СтрокаПоиска.ЦветРамки= ВосстановитьЗначение("ЦветРамки");
	 ЭлементыФормы.ТаймаутСекунд.ЦветРамки=  ВосстановитьЗначение("ЦветРамки");
	 Панель.ЦветРамки=  ВосстановитьЗначение("ЦветРамки");
       ЭлементыФормы.РамкаГруппы1.ЦветРамки = ВосстановитьЗначение("ЦветРамки");
	 ЭлементыФормы.РамкаГруппы2.ЦветРамки = ВосстановитьЗначение("ЦветРамки");
	//восстановить значение выбранного шрифта текста
	 ЭлементыФормы.ВнутреннийНомер.Шрифт= ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.ДействияФормы.Шрифт= ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.ИнформацияОКонтактномЛице.Шрифт=  ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.НадписьВнутреннийНомер.Шрифт =   ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.НадписьИнформацияОКонтактномЛице.Шрифт=   ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.НадписьНомерТелефона.Шрифт =    ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.НадписьПароль.Шрифт =     ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.НадписьСервер.Шрифт =   ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.НадписьТаймаут.Шрифт =   ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.НомерТелефона.Шрифт =   ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.ОсновныеДействияФормы.Шрифт =  ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.Пароль.Шрифт =    ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.Позвонить.Шрифт =    ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.ПолеКалендаря1.Шрифт =   ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.ПользовательС.Шрифт =     ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.РезультатПоискаСписок.Шрифт =  ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.сек.Шрифт = ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.Сервер.Шрифт = ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.СоздатьСобытие.Шрифт =   ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.Сохранить.Шрифт = ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.СписокНомеровКонтактногоЛица.Шрифт =  ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.СтрокаПоиска.Шрифт =   ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.ТаймаутСекунд.Шрифт = ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.ФонПанели.Шрифт = ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.ЦветРамки.Шрифт = ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.ЦветТекста.Шрифт = ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.Шрифт.Шрифт = ВосстановитьЗначение("ВыбранныйШрифт");
 ЭлементыФормы.Найти.Шрифт =  ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.Контрагент.Шрифт = ВосстановитьЗначение("ВыбранныйШрифт");
ЭлементыФормы.КонтактноеЛицо.Шрифт = ВосстановитьЗначение("ВыбранныйШрифт");	
Исключение;
Возврат;
КонецПопытки;
 КонецПроцедуры

Функция НайтиЧислоВСтроке(СтрокаСНомеромТелефона)
	СтрокаЧисел = "";
	Для Индекс = 1 По СтрДлина(СтрокаСНомеромТелефона) Цикл
		Символ = Сред(СтрокаСНомеромТелефона, Индекс, 1); //Перебираем все символы в строке с телефоном
		Если КодСимвола(Символ) >= 48 И КодСимвола(Символ) <= 57 Тогда // код "0"=48, "9"=57
			СтрокаЧисел = СтрокаЧисел + Символ;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокаЧисел;
КонецФункции

Процедура Авторизация()
    Ссылка = "http://"  + СокрЛП(Сервер)+"//service/data.php?action=auth&extension="+СокрЛП(ВнутреннийНомер)+"&password="+СокрЛП(Пароль);
    Сообщить(Ссылка);
	XMLHttp = GetCOMObject("", "Microsoft.XMLHTTP");
	XMLHttp.Open("GET", Ссылка, False);
	XMLHttp.Send();
	ОтветСервера = XMLHttp.responseText;
		
	РезультатМассив = СтрокаВМассив(ОтветСервера,);
	МояСтруктура = Новый Структура("Доступ","Сессия");
    Для каждого ЭлементМассива Из РезультатМассив Цикл
      Элемент = СтрЗаменить(ЭлементМассива, """","");
	  Элемент = СтрЗаменить(Элемент, "{","");
	 	  Если Найти(Элемент,"true") > 0 Тогда
	      МояСтруктура.Вставить("Доступ", "true");
      ИначеЕсли Найти(Элемент,"false") > 0 Тогда
		  МояСтруктура.Вставить("Доступ", "false");
		  Режим = РежимДиалогаВопрос.ОК;
		  Ответ = Вопрос("Проверьте наличие и правильность номера и пароля!!!",Режим,,,"Ошибка соединения");  
		  Если Ответ = КодВозвратаДиалога.ОК Тогда
			  Возврат;
		  КонецЕсли;
		  
			  
      ИначеЕсли Найти(Элемент,"session_id") > 0 Тогда
		  Значение = Лев(СтрЗаменить(Элемент, "session_id:",""),СтрДлина(СтрЗаменить(Элемент, "session_id:","")));
		  МояСтруктура.Вставить("Сессия",Значение);
		  Сессия = Значение;
		  //Сообщить(Сессия);
		  //СостояниеПриема();
		 
	  КонецЕсли;
      
    КонецЦикла;
	
КонецПроцедуры

Функция СтрокаВМассив(Знач Значение, Разделитель = ",") Экспорт
        МнСтр = СтрЗаменить( Значение, Разделитель, Символы.ПС);
        РезультатМассив = Новый Массив;
		Для й = 1 По СтрЧислоСтрок(МнСтр) Цикл
            РезультатМассив.Добавить(СтрПолучитьСтроку(МнСтр,й));
        КонецЦикла;
        Возврат РезультатМассив;
	КонецФункции

Процедура СостояниеПриема()
	Ссылка = "http://" + СокрЛП(Сервер)+"//service/data.php?action=get_state&session="+СокрЛП(Сессия);
	
	 XMLHttp.Open("GET", Ссылка, False);
	 XMLHttp.Send();
	 ОтветСервера = XMLHttp.responseText;
	 //
 	//ОтветСервера = "success:true,status:online,incoming_call:{time:01.01.12 12:00:00,number:000}"; 
 	//
 	Если Найти(ОтветСервера,"incoming_call") > 0 Тогда
    	 РезультатМассив = СтрокаВМассив(ОтветСервера,);
    	 Для каждого ЭлементМассива Из РезультатМассив Цикл
    		
    			 //Элемент = СтрЗаменить(Элемент, "{","");
    			 Если Найти(ЭлементМассива,"time") > 0 Тогда
    			    Время = Прав(СокрЛП(ЭлементМассива),17); 
			     ИначеЕсли Найти(ЭлементМассива,"number") > 0 Тогда
				    Сообщить(ЭлементМассива);
				    Элемент = СтрЗаменить(ЭлементМассива, "}","");
				    Элемент = СтрЗаменить(Элемент, "}","");
                    Элемент = СтрЗаменить(Элемент, """","");
				    Сообщить(Элемент);
				    НомерТелефона = Прав(СокрЛП(Элемент),СтрДлина(Элемент)-Найти(Элемент,":"));
					
			 КонецЕсли;

         КонецЦикла;
 
		Сообщить("Поступил звонок в "+Время +", от абонента "+НомерТелефона);
		
	 	ПоискАбонента(СокрЛП(НомерТелефона));
		
		//открываем инф окно
		ОтключитьОбработчикОжидания("СостояниеПриема");
		ФормаИнформации = ЭтотОбъект.ПолучитьФорму("ИнформацияКонтактногоЛица");
        ФормаИнформации.Открыть();
				ПодключитьОбработчикОжидания("СостояниеПриема", ТаймаутСекунд);	
		Сообщить("вкл");
	 КонецЕсли;
		 
 КонецПроцедуры
       
Процедура ПоискАбонента(НомерТелефона)
   	       РезультатПоискаСписок.Очистить();
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	КонтактнаяИнформация.Объект,
				   |	КонтактнаяИнформация.Представление
				   |ИЗ
				   |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
				   |ГДЕ
				   |	КонтактнаяИнформация.Тип = &ТипКонтактнойИнформации";
	Запрос.УстановитьПараметр("ТипКонтактнойИнформации",Перечисления.ТипыКонтактнойИнформации.Телефон);
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			НайденыйНомер = НайтиЧислоВСтроке(СокрЛП(Выборка.Представление));
			//Если НайденыйНомер = НомерТелефона Тогда
			Если Найти(НайденыйНомер,НомерТелефона) Тогда
				ИнформацияОКонтактномЛице = Выборка.Объект;
				Если ИнформацияОКонтактномЛице = Справочники.Контрагенты.ПустаяСсылка() Тогда
					КонтактноеЛицо = Выборка.Объект; 
					ИнформацияОКонтактномЛице = Выборка.Объект.Владелец;
				КонецЕсли;
				
				ОбновитьДанныеОКонтактномЛице(ИнформацияОКонтактномЛице);
				Прервать;
			Иначе  
				ИнформацияОКонтактномЛице = Справочники.Контрагенты.ПустаяСсылка();
				СписокНомеровКонтактногоЛица.Очистить();
			КонецЕсли;

		КонецЦикла;
	
	Иначе 
		Сообщить("Контактное лицо не найдено");
		СписокНомеровКонтактногоЛица.Очистить();
	КонецЕсли;
	
	Если ИнформацияОКонтактномЛице = Справочники.Контрагенты.ПустаяСсылка() Тогда
		Сообщить("Контактное лицо не найдено");
		СписокНомеровКонтактногоЛица.Очистить();
	КонецЕсли;	

		  


КонецПроцедуры


Процедура ОбновитьДанныеОКонтактномЛице(ИнформацияОКонтакте)  	
	       Если НЕ ИнформацияОКонтакте = Справочники.Контрагенты.ПустаяСсылка() Тогда
//	Попытка
		//ИнформацияОКонтакте = Справочники.Контрагенты.СоздатьЭлемент();		  
			ИнформацияОКонтакте.ПолучитьОбъект();
		ОтборДанныхОКонтактномЛице = СписокНомеровКонтактногоЛица.Отбор.Объект;
		ОтборДанныхОКонтактномЛице.Значение = ИнформацияОКонтакте;
		ОтборДанныхОКонтактномЛице.Использование = Истина;	
		
		ОтборДанныхОКонтактномЛице = СписокНомеровКонтактногоЛица.Отбор.Тип;
		ОтборДанныхОКонтактномЛице.Значение = Перечисления.ТипыКонтактнойИнформации.Телефон;
		ОтборДанныхОКонтактномЛице.Использование = Истина;
	  КонецЕсли;

	
			  //КонецЕсли;


КонецПроцедуры

Процедура НомерТелефонаПриИзменении(Элемент)
	ПоискАбонента(СокрЛП(НомерТелефона));
	КонецПроцедуры

Процедура СтрокаПоискаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	//ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления();
КонецПроцедуры


Процедура СписокНомеровКонтактногоЛицаПриАктивизацииСтроки(Элемент)
	
	
	//НомерТелефона = 	 ЭлементыФормы.СписокНомеровКонтактногоЛица.ВыделенныеСтроки;
	//	ТекущаяСтрока = ЭлементыФормы.РезультатПоискаСписок.ТекущиеДанные;  
	//
		КонецПроцедуры




Процедура ФонПанелиНажатие(Элемент)
	// выбрать картинку для фона телефонии и сохранить ее в папке с телефонией
	
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
Диалог.Заголовок = "Выберите фон панели";
Диалог.ПолноеИмяФайла = "";
Диалог.ПредварительныйПросмотр = Истина;
Диалог.Фильтр = 
"Все картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|" 
+ "Формат bmp (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|"
+ "Формат JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|"
+ "Формат TIFF (*.tif)|*.tif|"
+ "Формат GIF (*.gif)|*.gif|"
+ "Формат PNG (*.png)|*.png|"
+ "Формат icon (*.ico)|*.ico|"
+ "Формат метафайл (*.wmf;*.emf)|*.wmf;*.emf|"; // картинки

Если Диалог.Выбрать() Тогда
    КартинкаФона = Новый Картинка(Диалог.ПолноеИмяФайла,Ложь);
    Панель.Картинка = КартинкаФона;
		КартинкаФона.Записать("Фон.jpg");
		
	Иначе
	Отказ = Истина;
	Возврат;
КонецЕсли;

КонецПроцедуры


Процедура ЦветТекстаНажатие(Элемент)
	Диалог = Новый ДиалогВыбораЦвета();
	Если Диалог.Выбрать()Тогда
	ВыбранныйЦвет = Диалог.Цвет;
  
   //Даем значение каждому элементу телефонии по выбранному цвету текста и сохраняем
   ЭлементыФормы.КонтактноеЛицо.ЦветТекстаКнопки = Выбранныйцвет;
   ЭлементыФормы.Контрагент.ЦветТекстаКнопки = ВыбранныйЦвет;
	   ЭлементыФормы.ВнутреннийНомер.ЦветТекстаПоля= ВыбранныйЦвет;
	ЭлементыФормы.ИнформацияОКонтактномЛице.ЦветТекстаПоля= ВыбранныйЦвет;
	ЭлементыФормы.ЦветТекста.ЦветТекстаКнопки =     ВыбранныйЦвет;
	ЭлементыФормы.НадписьВнутреннийНомер.ЦветТекста=  ВыбранныйЦвет;
	ЭлементыФормы.НадписьИнформацияОКонтактномЛице.ЦветТекста=  ВыбранныйЦвет;
	ЭлементыФормы.НадписьНомерТелефона.ЦветТекста=  ВыбранныйЦвет;
	ЭлементыФормы.НадписьПароль.ЦветТекста =  ВыбранныйЦвет;
	ЭлементыФормы.НадписьСервер.ЦветТекста=ВыбранныйЦвет;
	ЭлементыФормы.НадписьТаймаут.ЦветТекста=  ВыбранныйЦвет;
	ЭлементыФормы.Найти.ЦветТекстаКнопки= ВыбранныйЦвет;
	ЭлементыФормы.НомерТелефона.ЦветТекстаПоля= ВыбранныйЦвет;
	ЭлементыФормы.Пароль.ЦветТекстаПоля =ВыбранныйЦвет; 
	ЭлементыФормы.Позвонить.ЦветТекстаКнопки=   ВыбранныйЦвет;
		ЭлементыФормы.ПолеКалендаря1.ЦветТекстаПоля=    ВыбранныйЦвет;
	ЭлементыФормы.ПользовательС.ЦветТекстаПоля=ВыбранныйЦвет;
	ЭлементыФормы.РезультатПоискаСписок.ЦветТекстаПоля= ВыбранныйЦвет;
	ЭлементыФормы.сек.ЦветТекста=  ВыбранныйЦвет;
	ЭлементыФормы.Сервер.ЦветТекстаПоля =ВыбранныйЦвет; 
	ЭлементыФормы.СоздатьСобытие.ЦветТекстаКнопки=  ВыбранныйЦвет;
	 ЭлементыФормы.Сохранить.ЦветТекстаКнопки=  ВыбранныйЦвет;
	 ЭлементыФормы.СписокНомеровКонтактногоЛица.ЦветТекстаПоля= ВыбранныйЦвет;
	 ЭлементыФормы.СтрокаПоиска.ЦветТекстаПоля= ВыбранныйЦвет;
	 ЭлементыФормы.ТаймаутСекунд.ЦветТекстаПоля= ВыбранныйЦвет;
	 ЭлементыФормы.ФонПанели.ЦветТекстаКнопки=  ВыбранныйЦвет;
	 ЭлементыФормы.ЦветРамки.ЦветТекстаКнопки = ВыбранныйЦвет;
	  ЭлементыФормы.Шрифт.ЦветТекстаКнопки =  ВыбранныйЦвет;
	  ЭлементыФормы.ДействияФормы.ЦветТекстаКнопки = ВыбранныйЦвет;
	  Панель.ЦветТекста = ВыбранныйЦвет;
	  Панель.ЦветТекстаПоля = ВыбранныйЦвет;
		
	
	 	СохранитьЗначение("ВыбранныйЦвет",ВыбранныйЦвет);   
	Иначе
	Отказ = Истина ;
КонецЕсли;

КонецПроцедуры

Процедура ЦветРамкиНажатие(Элемент)
	Диалог = Новый ДиалогВыбораЦвета();
	Если Диалог.Выбрать()Тогда
    ЦветРамки = Диалог.Цвет;
  
	//меняем цвет рамок объектов
	ЭлементыФормы.ВнутреннийНомер.ЦветРамки= ЦветРамки;
	ЭлементыФормы.ИнформацияОКонтактномЛице.ЦветРамки= ЦветРамки;
	ЭлементыФормы.НомерТелефона.ЦветРамки= ЦветРамки;
	ЭлементыФормы.Пароль.ЦветРамки =ЦветРамки; 
		ЭлементыФормы.РезультатПоискаСписок.ЦветРамки= ЦветРамки;
	ЭлементыФормы.Сервер.ЦветРамки =ЦветРамки; 
		 ЭлементыФормы.СписокНомеровКонтактногоЛица.ЦветРамки= ЦветРамки;
	 ЭлементыФормы.СтрокаПоиска.ЦветРамки=ЦветРамки;
	 ЭлементыФормы.ТаймаутСекунд.ЦветРамки= ЦветРамки;
	 Панель.ЦветРамки= ЦветРамки;
	 ЭлементыФормы.РамкаГруппы1.ЦветРамки = ЦветРамки;
	 ЭлементыФормы.РамкаГруппы2.ЦветРамки = ЦветРамки;
	

	 
	СохранитьЗначение("ЦветРамки",ЦветРамки);   
	Иначе
	Отказ = Истина ;
КонецЕсли;

КонецПроцедуры

Процедура ШрифтНажатие(Элемент)
	Диалог = Новый ДиалогВыбораШрифта; 
Если Диалог.Выбрать() Тогда 
	ВыбранныйШрифт = Диалог.Шрифт; 
	
//меняем шрифт объектов телефонии
ЭлементыФормы.Контрагент.Шрифт = ВыбранныйШрифт;
ЭлементыФормы.КонтактноеЛицо.Шрифт = ВыбранныйШрифт;
ЭлементыФормы.ВнутреннийНомер.Шрифт=ВыбранныйШрифт;
ЭлементыФормы.ДействияФормы.Шрифт=  ВыбранныйШрифт;
ЭлементыФормы.ИнформацияОКонтактномЛице.Шрифт=      ВыбранныйШрифт;
ЭлементыФормы.НадписьВнутреннийНомер.Шрифт =    ВыбранныйШрифт;
ЭлементыФормы.НадписьИнформацияОКонтактномЛице.Шрифт= ВыбранныйШрифт;
ЭлементыФормы.НадписьНомерТелефона.Шрифт =   ВыбранныйШрифт;
ЭлементыФормы.НадписьПароль.Шрифт =   ВыбранныйШрифт;
ЭлементыФормы.НадписьСервер.Шрифт =  ВыбранныйШрифт;
ЭлементыФормы.НадписьТаймаут.Шрифт =   ВыбранныйШрифт;
ЭлементыФормы.НомерТелефона.Шрифт =   ВыбранныйШрифт;
ЭлементыФормы.ОсновныеДействияФормы.Шрифт =  ВыбранныйШрифт;
ЭлементыФормы.Пароль.Шрифт =     ВыбранныйШрифт;
ЭлементыФормы.Позвонить.Шрифт =   ВыбранныйШрифт;
ЭлементыФормы.ПолеКалендаря1.Шрифт =   ВыбранныйШрифт;
ЭлементыФормы.ПользовательС.Шрифт =    ВыбранныйШрифт;
ЭлементыФормы.РезультатПоискаСписок.Шрифт =  ВыбранныйШрифт;
ЭлементыФормы.сек.Шрифт =         ВыбранныйШрифт;
ЭлементыФормы.Сервер.Шрифт =ВыбранныйШрифт;
ЭлементыФормы.СоздатьСобытие.Шрифт =    ВыбранныйШрифт;
ЭлементыФормы.Сохранить.Шрифт =   ВыбранныйШрифт;
ЭлементыФормы.СписокНомеровКонтактногоЛица.Шрифт =ВыбранныйШрифт; 
ЭлементыФормы.СтрокаПоиска.Шрифт =  ВыбранныйШрифт;
ЭлементыФормы.ТаймаутСекунд.Шрифт =  ВыбранныйШрифт;
ЭлементыФормы.ФонПанели.Шрифт =    ВыбранныйШрифт;
ЭлементыФормы.ЦветРамки.Шрифт =  ВыбранныйШрифт;
ЭлементыФормы.ЦветТекста.Шрифт =  ВыбранныйШрифт;
ЭлементыФормы.Шрифт.Шрифт =    ВыбранныйШрифт;
 ЭлементыФормы.Найти.Шрифт = ВыбранныйШрифт;


	  СохранитьЗначение("ВыбранныйШрифт",ВыбранныйШрифт);   
	Иначе
	Отказ = Истина ;

КонецЕсли;

КонецПроцедуры

Процедура ПриЗакрытии()
	Попытка
	ЭтотОбъект.ПолучитьФорму("ИнформацияКонтактногоЛица").Закрыть();
Исключение;
	КонецПопытки;
КонецПроцедуры



Процедура КонтрагентНажатие(Элемент)
	Контрагент = Справочники.Контрагенты.ПолучитьФормуНовогоЭлемента("ФормаЭлемента");
	Контрагент.Открыть();
КонецПроцедуры

Процедура КонтактноеЛицоНажатие(Элемент)
	КонтЛицо = Справочники.КонтактныеЛица.ПолучитьФормуНовогоЭлемента("ФормаЭлемента");
	КонтЛицо.Открыть();
КонецПроцедуры

 Процедура СоздатьСобытиеНажатие(Элемент)
		ВвестиНовоеСобытие(Ложь, Неопределено, Перечисления.ВидыСобытий.ТелефонныйЗвонок);

КонецПроцедуры
	
Процедура ВвестиНовоеСобытие(Копирование = Ложь, Элемент = Неопределено, ВыбранныйВидСобытия)

	//Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ИнформацияОКонтактномЛице.ПолучитьФорму()) Тогда
	//	Возврат;
	//КонецЕсли; 

	Если Копирование Тогда
		Если Элемент.ТекущаяСтрока <> Неопределено И НЕ Элемент.ТекущаяСтрока.Пустая() Тогда
			Элемент.ТекущаяСтрока.Скопировать().ПолучитьФорму(,ЭтаФорма).Открыть();
		КонецЕсли;
	Иначе
		
		Если ВыбранныйВидСобытия = Неопределено Тогда
			
			СписокВыбора = Новый СписокЗначений;
			Для каждого ВидСобытия Из Перечисления.ВидыСобытий Цикл
				ЭлементСписка = СписокВыбора.Добавить(ВидСобытия, Строка(ВидСобытия));
				ЭлементСписка.Картинка = УправлениеКонтактами.ПолучитьКартинкуНапоминания(ВидСобытия);
			КонецЦикла; 

			Если Элемент <> Неопределено И Элемент.ТекущиеДанные <> Неопределено И НЕ Элемент.ТекущиеДанные.Ссылка.Пустая() Тогда
				ЗначенияПоискаВСписке = Элемент.ТекущиеДанные.ВидСобытия;
			КонецЕсли;

			НайденныйЭлементСписка = СписокВыбора.НайтиПоЗначению(ЗначенияПоискаВСписке);
			ВыбранныйЭлемент = СписокВыбора.ВыбратьЭлемент("Выберите тип документа", НайденныйЭлементСписка);
			
			Если ВыбранныйЭлемент <> Неопределено Тогда
				ВыбранныйВидСобытия = ВыбранныйЭлемент.Значение;
			КонецЕсли; 
			
		КонецЕсли; 
		
		Если ВыбранныйВидСобытия <> Неопределено Тогда
			
			Док = Документы.Событие.СоздатьДокумент();
			
			Док.ВидСобытия     = ВыбранныйВидСобытия;
			Док.Контрагент     = ИнформацияОКонтактномЛице;
			//Док.КонтактноеЛицо = ИнформацияОКонтактномЛице.ОсновноеКонтактноеЛицо;
			Док.КонтактноеЛицо = КонтактноеЛицо;
			Док.ВидОбъекта     = Перечисления.ВидыОбъектовСобытия.Контрагент;

			ФормаСобытия       = Док.
			ПолучитьФорму(,ЭтаФорма);
			
//			ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.События;
			ФормаСобытия.СтруктураОбъектКонтрагент = Новый Структура("Объект, ЗаписыватьОбъект", ЭтотОбъект, Истина);
			
			ФормаСобытия.Открыть();
			Сообщить("Нужно ли здесь открывать окно контрагента? (справочник Контрагенты)");
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура СписокНомеровКонтактногоЛицаПриАктивизацииКолонки(Элемент)
	// Вставить содержимое обработчика.
	НомерТелефона = ЭлементыФормы.СписокНомеровКонтактногоЛица.ТекущиеДанные.Представление;
КонецПроцедуры


Процедура РезультатПоискаСписокПриАктивизацииКолонки(Элемент)
	ТекущаяСтрока = ЭлементыФормы.РезультатПоискаСписок.ТекущиеДанные;  
	ИнформацияОКонтактномЛице = ТекущаяСтрока.Объект;
	ИнформацияОКонтакте =  ТекущаяСтрока.Объект;

	ОбновитьДанныеОКонтактномЛице(ИнформацияОКонтакте);	
	
КонецПроцедуры


Процедура РезультатПоискаСписокПриАктивизацииСтроки(Элемент)
	 //Вставить содержимое обработчика.
	ТекущаяСтрока = ЭлементыФормы.РезультатПоискаСписок.ТекущиеДанные;  
	ИнформацияОКонтактномЛице = ТекущаяСтрока.Объект;
	ИнформацияОКонтакте =  ТекущаяСтрока.Объект;

	ОбновитьДанныеОКонтактномЛице(ИнформацияОКонтакте);	

КонецПроцедуры

